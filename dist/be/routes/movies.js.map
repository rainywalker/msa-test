{"version":3,"sources":["../../../be/routes/movies.js"],"names":["express","require","router","Router","movies","get","req","res","next","find","err","movie","status","send","post","create","name","body","year","director","poster","id","parseInt","param","filter","v","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,SAASH,QAAQ,kBAAR,CAAf;;AAKAC,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAC9BJ,WAAOK,IAAP,CAAY,EAAZ,EAAgB,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAClC,YAAID,GAAJ,EAAS,OAAOH,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB,CAAP;AACTN,YAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AACH,KAHD;AAIH,CALD;;AAOAT,OAAOY,IAAP,CAAY,GAAZ,EAAiB,UAACR,GAAD,EAAMC,GAAN,EAAc;AAC3BH,WAAOW,MAAP,CAAc;AACVC,cAAOV,IAAIW,IAAJ,CAASD,IADN;AAEVE,cAAOZ,IAAIW,IAAJ,CAASC,IAFN;AAGVC,kBAAWb,IAAIW,IAAJ,CAASE,QAHV;AAIVC,gBAASd,IAAIW,IAAJ,CAASG;AAJR,KAAd,EAMI,UAACV,GAAD,EAAMC,KAAN,EAAgB;AACZ,YAAID,GAAJ,EAAS,OAAOH,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAArB,CAAP;AACTN,YAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AACH,KATL;AAUH,CAXD;;AAaAT,OAAOG,GAAP,CAAW,MAAX,EAAmB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACjC,QAAMa,KAAKC,SAAShB,IAAIiB,KAAJ,CAAUF,EAAnB,EAAuB,EAAvB,CAAX;AACA,QAAMV,QAAQP,OAAOoB,MAAP,CAAc;AAAA,eAAGC,EAAEJ,EAAF,KAASA,EAAZ;AAAA,KAAd,CAAd;AACAd,QAAIM,IAAJ,CAASF,KAAT;AACH,CAJD;;AAMAe,OAAOC,OAAP,GAAiBzB,MAAjB","file":"movies.js","sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst movies = require('../models/Movies');\n\n\n\n\nrouter.get('/', (req,res,next) => {\n    movies.find({}, function (err, movie) {\n        if (err) return res.status(500).send(\"User 전체 조회 실패.\");\n        res.status(200).send(movie);\n    })\n})\n\nrouter.post('/', (req, res) => {\n    movies.create({\n        name : req.body.name,\n        year : req.body.year,\n        director : req.body.director,\n        poster : req.body.poster\n    },\n        (err, movie) => {\n            if (err) return res.status(500).send(\"User 생성 실패.\");\n            res.status(200).send(movie);\n        })\n})\n\nrouter.get('/:id', (req,res,next) => {\n    const id = parseInt(req.param.id, 10);\n    const movie = movies.filter(v=>v.id === id);\n    res.send(movie);\n})\n\nmodule.exports = router;\n"]}